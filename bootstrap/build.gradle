buildscript {
    repositories {
        mavenCentral()
        jcenter()
        // gradle plugins repository
        gradlePluginPortal()
    }
    dependencies {
        //Spring-boot
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

plugins {
    id 'jp.co.soramitsu.sora-plugin' version '0.1.2'
}

apply plugin: 'application'
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "jp.co.soramitsu.bootstrap.BootstrapMain"
shadowDistZip.classifier = 'shadow'
shadowDistTar.classifier = 'shadow'
// name of jar file that the shadowJar plugin generates
shadowJar.archiveName = 'app.jar'

// sora-plugin configs
soramitsu {
    projectGroup = 'd3-deploy'
    docker {
        // docker tag
        tag = System.getenv("TAG")
        // jar file that is used in the generated Dockerfile
        jar = new File("build/libs/app.jar")
        // the rest in configured using env variables
    }
}

shadowJar {
    zip64 true
}

dependencies {

    final def springfoxSwagger2Version = '2.9.2'
    final def springBootVersion = '2.1.3.RELEASE'
    final def kotlinVersion = '1.3.10'
    final def d3EthVersion = '9b302a5fcb211878b9754a426195bba012b630f2'

    implementation project(":notary-commons")
    //TODO change version after release
    implementation "com.github.d3ledger.d3-eth:eth:$d3EthVersion"

    // kotlin related
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
    compile 'io.github.microutils:kotlin-logging:1.6.24'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    //Iroha-java related
    implementation('com.github.hyperledger.iroha-java:testcontainers:5.1.1') {
        exclude group: 'org.slf4j'
    }

    //Spring-boot
    implementation("org.springframework.boot:spring-boot-starter:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.hibernate'
    }
    implementation "io.springfox:springfox-swagger2:$springfoxSwagger2Version"
    implementation "io.springfox:springfox-swagger-ui:$springfoxSwagger2Version"

    // Changelog interface
    compile 'com.github.d3ledger.bootstrap-changelog:changelog-interface:72b15aabbcfaa88176617444ea36a201b0b347b7'

    //TODO this is very dirty hack. This dependency must be removed after migration to newer version of Spring Boot
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-validator

    implementation 'org.hibernate:hibernate-validator:6.0.14.Final'

    implementation "org.springframework.boot:spring-boot-starter-jetty:$springBootVersion"

    implementation "commons-logging:commons-logging:1.2"

    compile 'com.google.protobuf:protobuf-java-util:3.6.1'
    compile 'org.bitcoinj:bitcoinj-core:0.14.7'

    //Web3j
    compile 'org.web3j:crypto:4.1.1'
    compile 'org.web3j:core:4.1.1'
    
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"

}

sourceCompatibility = 1.8

task runBootstrap(type: JavaExec ) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
}

sonarqube {
    properties {
        property "sonar.projectKey", "bootstrap"
    }
}
