<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util.xsd">

  <!-- PATH TO THE PROPERTIES FILE -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations" value="file:config/context/application.properties"/>
  </bean>

  <!-- KEY PAIR DEFINITION -->
  <bean id="keyPair" class="iroha.validation.utils.ValidationUtils"
        factory-method="readKeyPairFromFiles">
    <constructor-arg name="pubKeyPath" value="${credential.pubkeyFilePath}"/>
    <constructor-arg name="privKeyPath" value="${credential.privkeyFilePath}"/>
  </bean>

  <!-- IROHA API IPJ CONFIG -->
  <bean id="irohaAPI" class="jp.co.soramitsu.iroha.java.IrohaAPI">
    <constructor-arg name="host" value="${iroha.host}"/>
    <constructor-arg name="port" value="${iroha.port}"/>
  </bean>

  <!-- STORAGE CONFIG -->
  <bean id="mongoVerdictStorage"
        class="iroha.validation.transactions.storage.impl.mongo.MongoTransactionVerdictStorage">
    <constructor-arg name="mongoHost" value="${mongo.host}"/>
    <constructor-arg name="mongoPort" value="${mongo.port}"/>
  </bean>

  <!-- USER ACCOUNTS MANAGER CONFIG -->
  <bean id="accountManager"
        class="iroha.validation.transactions.provider.impl.AccountManager">
    <constructor-arg name="accountId" value="${credential.accountId}"/>
    <constructor-arg name="keyPair" ref="keyPair"/>
    <constructor-arg name="irohaAPI" ref="irohaAPI"/>
    <constructor-arg name="userQuorumAttribute" value="${quorum.key}"/>
    <constructor-arg name="userDomains" value="${brvs.userDomains}"/>
    <constructor-arg name="userAccountsHolderAccount" value="${accounts.holder}"/>
    <constructor-arg name="brvsInstancesHolderAccount" value="${credential.accountId}"/>
  </bean>

  <!-- PROVIDER CONFIG -->
  <bean id="transactionProvider"
        class="iroha.validation.transactions.provider.impl.BasicTransactionProvider">
    <constructor-arg name="transactionVerdictStorage" ref="mongoVerdictStorage"/>
    <constructor-arg name="cacheProvider" ref="cacheProvider"/>
    <constructor-arg name="userQuorumProvider" ref="accountManager"/>
    <constructor-arg name="registrationProvider" ref="accountManager"/>
    <constructor-arg name="irohaReliableChainListener" ref="irohaReliableChainListener"/>
    <constructor-arg name="userDomains" value="${brvs.userDomains}"/>
  </bean>

  <!-- CHAIN LISTENER CONFIG -->
  <bean id="irohaReliableChainListener"
        class="iroha.validation.listener.IrohaReliableChainListener">
    <constructor-arg name="irohaAPI" ref="irohaAPI"/>
    <constructor-arg name="accountId" value="${credential.accountId}"/>
    <constructor-arg name="keyPair" ref="keyPair"/>
    <constructor-arg name="rmqHost" value="${rmq.host}"/>
    <constructor-arg name="rmqPort" value="${rmq.port}"/>
  </bean>

  <!-- SIGNER CONFIG -->
  <bean id="transactionSigner"
        class="iroha.validation.transactions.signatory.impl.TransactionSignerImpl">
    <constructor-arg name="irohaAPI" ref="irohaAPI"/>
    <constructor-arg name="keyPair" ref="keyPair"/>
    <constructor-arg name="transactionVerdictStorage" ref="mongoVerdictStorage"/>
  </bean>

  <!-- CACHE CONFIG -->
  <bean id="cacheProvider" class="iroha.validation.transactions.provider.impl.util.CacheProvider"/>

  <!-- BRVS DATA CONFIG -->
  <bean id="pubkey" class="iroha.validation.utils.ValidationUtils" factory-method="readKey">
    <constructor-arg name="keyPath" value="${credential.pubkeyFilePath}"/>
  </bean>
  <bean id="brvsData" class="iroha.validation.transactions.provider.impl.util.BrvsData">
    <constructor-arg name="hexPubKey" ref="pubkey"/>
    <constructor-arg name="hostname" value="${brvs.localhostname}"/>
  </bean>

  <!-- SERVICE CONFIG -->
  <bean id="serviceContext" class="iroha.validation.config.ValidationServiceContext">
    <constructor-arg name="validators" ref="validators"/>
    <constructor-arg name="transactionProvider" ref="transactionProvider"/>
    <constructor-arg name="transactionSigner" ref="transactionSigner"/>
    <constructor-arg name="registrationProvider" ref="accountManager"/>
    <constructor-arg name="brvsData" ref="brvsData"/>
  </bean>

  <bean class="iroha.validation.service.impl.ValidationServiceImpl">
    <constructor-arg name="validationServiceContext" ref="serviceContext"/>
  </bean>

  <!-- RULES DEFINITIONS -->
  <bean id="sampleRule" class="iroha.validation.rules.impl.SampleRule"/>
  <bean id="newBrvsRule" class="iroha.validation.rules.impl.NewBrvsRule">
    <constructor-arg name="brvsAccountId" value="${credential.accountId}"/>
    <constructor-arg name="keyPair" ref="keyPair"/>
    <constructor-arg name="irohaAPI" ref="irohaAPI"/>
  </bean>
  <util:list id="rules" value-type="iroha.validation.rules.Rule">
    <ref bean="sampleRule"/>
    <ref bean="newBrvsRule"/>
    <!-- More can be added -->
  </util:list>

  <!-- VALIDATORS DEFINITIONS -->
  <bean id="simpleAggregationValidator"
        class="iroha.validation.validators.impl.SimpleAggregationValidator">
    <constructor-arg ref="rules"/>
  </bean>
  <util:list id="validators" value-type="iroha.validation.validators.Validator">
    <ref bean="simpleAggregationValidator"/>
    <!-- More can be added -->
  </util:list>
</beans>
