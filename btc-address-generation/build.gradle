buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        //Spring-boot
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'application'
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'org.springframework.boot'
mainClassName = "generation.btc.BtcAddressGenerationMain"

dependencies {
    compile project(":btc")
}

task runBtcAddressGeneration(type: JavaExec) {
    main = 'generation.btc.BtcAddressGenerationMain'
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
    systemProperty 'java.library.path', getIrohaLibPath()
    environment "LD_LIBRARY_PATH", getIrohaLibPath()
}

task generateBtcChangeAddress(type: JavaExec) {
    main = 'generation.btc.trigger.BtcChangeAddressGeneration'
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
    systemProperty 'java.library.path', getIrohaLibPath()
    environment "LD_LIBRARY_PATH", getIrohaLibPath()
}

task generateBtcFreeAddress(type: JavaExec) {
    main = 'generation.btc.trigger.BtcFreeAddressGeneration'
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
    systemProperty 'java.library.path', getIrohaLibPath()
    environment "LD_LIBRARY_PATH", getIrohaLibPath()
}

sonarqube {
    properties {
        property "sonar.projectKey", "notary:btc-addres-generation"
    }
}
