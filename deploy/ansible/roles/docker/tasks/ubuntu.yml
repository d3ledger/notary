---
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    
  - name: Purge old Docker versions if any
    apt: purge=yes state=absent name={{ item }} 
    with_items:
      - docker
      - docker-engine
      - docker.io
    become: yes

  - name: Install packages
    apt: pkg={{ item }} state=installed update_cache=yes
    with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python-setuptools
      - python-pip
    become: yes

  - name: Add GPG key
    shell: 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -'
    become: yes


  - name: Add repository
    shell: 'add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"'
    become: yes

  - name: Install docker
    apt: 
      name: docker-ce={{ dockerVersion }}
      state: present
      update_cache: yes
    become: yes

# purge if anything installed to resolve conflicts
  - name: remove existing python modules
    pip:
      name: "{{ item }}"
      state: absent
    with_items:
      - docker
      - docker-py
      - docker-compose
    become: yes

  - name: install docker python modules
    pip:
      name: "{{ item }}"
      state: latest
    with_items:
      - docker
      - docker-compose
    become: yes

  - name: download docker-compose bin
    raw: curl -L https://github.com/docker/compose/releases/download/{{ dockerComposeVersion }}/docker-compose-`uname -s`-`uname -m` -o {{ execPath }}/docker-compose
    become: yes

  - name: make docker-compose executable
    file:
      path: "{{ execPath }}/docker-compose"
      mode: "a+x"
    become: yes

  - name: Log into private registry and force re-authorization
    docker_login:
      registry: nexus.iroha.tech:19002
      username: d3-deploy
      password: "{{ docker_password }}"
      reauthorize: yes
